{"meta":{"version":1,"warehouse":"4.0.2"},"models":{"Asset":[{"_id":"node_modules/hexo-theme-fluid/source/css/highlight-dark.styl","path":"css/highlight-dark.styl","modified":1,"renderable":1},{"_id":"node_modules/hexo-theme-fluid/source/css/gitalk.css","path":"css/gitalk.css","modified":1,"renderable":1},{"_id":"node_modules/hexo-theme-fluid/source/css/highlight.styl","path":"css/highlight.styl","modified":1,"renderable":1},{"_id":"node_modules/hexo-theme-fluid/source/css/main.styl","path":"css/main.styl","modified":1,"renderable":1},{"_id":"node_modules/hexo-theme-fluid/source/img/avatar.png","path":"img/avatar.png","modified":1,"renderable":1},{"_id":"node_modules/hexo-theme-fluid/source/img/default.png","path":"img/default.png","modified":1,"renderable":1},{"_id":"node_modules/hexo-theme-fluid/source/img/fluid.png","path":"img/fluid.png","modified":1,"renderable":1},{"_id":"node_modules/hexo-theme-fluid/source/img/loading.gif","path":"img/loading.gif","modified":1,"renderable":1},{"_id":"node_modules/hexo-theme-fluid/source/xml/local-search.xml","path":"xml/local-search.xml","modified":1,"renderable":1},{"_id":"node_modules/hexo-theme-fluid/source/img/police_beian.png","path":"img/police_beian.png","modified":1,"renderable":1},{"_id":"node_modules/hexo-theme-fluid/source/js/boot.js","path":"js/boot.js","modified":1,"renderable":1},{"_id":"node_modules/hexo-theme-fluid/source/js/color-schema.js","path":"js/color-schema.js","modified":1,"renderable":1},{"_id":"node_modules/hexo-theme-fluid/source/js/events.js","path":"js/events.js","modified":1,"renderable":1},{"_id":"node_modules/hexo-theme-fluid/source/js/img-lazyload.js","path":"js/img-lazyload.js","modified":1,"renderable":1},{"_id":"node_modules/hexo-theme-fluid/source/js/leancloud.js","path":"js/leancloud.js","modified":1,"renderable":1},{"_id":"node_modules/hexo-theme-fluid/source/js/local-search.js","path":"js/local-search.js","modified":1,"renderable":1},{"_id":"node_modules/hexo-theme-fluid/source/js/utils.js","path":"js/utils.js","modified":1,"renderable":1},{"_id":"node_modules/hexo-theme-fluid/source/js/plugins.js","path":"js/plugins.js","modified":1,"renderable":1}],"Cache":[{"_id":"source/_posts/2022-11-25-dotnet-docker.md","hash":"20beda84ba148bfd680993f4cf8dd6c25e199281","modified":1671191936311},{"_id":"source/_posts/2022-11-25-migrations.md","hash":"4b72e0714f71f2080faec3bfcbc0007743d15ed4","modified":1671191936312},{"_id":"source/about/index.md","hash":"2befcfe0ee2382370aa1d12425e9c50fe71f0b74","modified":1671191936315},{"_id":"source/_posts/2022-11-26-dotnet-auto-inject.md","hash":"830a692b10057a7ae9d448df5c3c9e4b3ceb8935","modified":1671191936313},{"_id":"source/js/music.js","hash":"e492378ee5ea6927641ecb42883da91e3f7261e0","modified":1671191936326},{"_id":"source/categories/index.md","hash":"969a38fbccd8301b7b9be33b1c2d3c5653836005","modified":1671107745092},{"_id":"source/js/duration.js","hash":"347601de50b88df0cfeb9cb1aaee34ce775adc5d","modified":1671191936325},{"_id":"source/_posts/2022-12-16-ssh-upload.md","hash":"dbe07fd6f2a201ffbf5a8d6291dac7657bbee376","modified":1671191936313},{"_id":"source/tags/index.md","hash":"51b6d0df4031b369ea68b51667ba7c85b53d777e","modified":1671107745093},{"_id":"source/styles/site.css","hash":"5f24fd6e5ef177860f555d8003ccc026f0d4056e","modified":1671193861533},{"_id":"node_modules/hexo-theme-fluid/source/css/_pages/_tag/tag.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":499162500000},{"_id":"node_modules/hexo-theme-fluid/LICENSE","hash":"26f9356fd6e84b5a88df6d9014378f41b65ba209","modified":499162500000},{"_id":"node_modules/hexo-theme-fluid/README.md","hash":"6d752df6f2278033dc2512a7d5be22c8a8eb665a","modified":499162500000},{"_id":"node_modules/hexo-theme-fluid/_config.yml","hash":"088788e149051fc0a3c6096ba95e35a8344de04b","modified":499162500000},{"_id":"node_modules/hexo-theme-fluid/package.json","hash":"682f5b9e3645aee5c6f1a9f846bb7c137f9754fa","modified":1671109414227},{"_id":"node_modules/hexo-theme-fluid/languages/de.yml","hash":"0e7d455d9e004ff15d8924b7a0c35cea25ee5b1d","modified":499162500000},{"_id":"node_modules/hexo-theme-fluid/languages/en.yml","hash":"cb11b39f44ea069652c9647179606b6cecc98d50","modified":499162500000},{"_id":"node_modules/hexo-theme-fluid/languages/es.yml","hash":"7112594259c88c04714be152af7fd377687dad40","modified":499162500000},{"_id":"node_modules/hexo-theme-fluid/languages/eo.yml","hash":"a556251cc50a5680578c03f1efbf252b1f4ab860","modified":499162500000},{"_id":"node_modules/hexo-theme-fluid/languages/ja.yml","hash":"3dd6d20f8d26585a7c154a8e59fe8d5d902f4c6a","modified":499162500000},{"_id":"node_modules/hexo-theme-fluid/languages/ru.yml","hash":"7dc78f22696649a4c68dc65a9b52d9a992fa82a0","modified":499162500000},{"_id":"node_modules/hexo-theme-fluid/languages/zh-TW.yml","hash":"596d031dff3826ae8e4ffc8931fff28977b73247","modified":499162500000},{"_id":"node_modules/hexo-theme-fluid/layout/404.ejs","hash":"b84d575c7b7f778b4cb64e89ad3d0aed4a896820","modified":499162500000},{"_id":"node_modules/hexo-theme-fluid/layout/about.ejs","hash":"163bee643e6a38912d3ae70923c83c48d57222e7","modified":499162500000},{"_id":"node_modules/hexo-theme-fluid/languages/zh-HK.yml","hash":"80ed400a7adaa92ea54fc7f5d534c9af795bed00","modified":499162500000},{"_id":"node_modules/hexo-theme-fluid/layout/archive.ejs","hash":"7c1f44005849791feae4abaa10fae4cb983d3277","modified":499162500000},{"_id":"node_modules/hexo-theme-fluid/layout/categories.ejs","hash":"13859726c27b6c79b5876ec174176d0f9c1ee164","modified":499162500000},{"_id":"node_modules/hexo-theme-fluid/languages/zh-CN.yml","hash":"f96a22f989897ecddc69d5867a206e1cf6b8f610","modified":499162500000},{"_id":"node_modules/hexo-theme-fluid/layout/category.ejs","hash":"f099161b738a16a32253f42085b5444f902018ed","modified":499162500000},{"_id":"node_modules/hexo-theme-fluid/layout/index.ejs","hash":"db000a6a0cec19d32a6e7e94cd4c478500d9c5ac","modified":499162500000},{"_id":"node_modules/hexo-theme-fluid/layout/links.ejs","hash":"1cac32ec4579aaf7b9fa39d317497331d4c5e1dd","modified":499162500000},{"_id":"node_modules/hexo-theme-fluid/layout/layout.ejs","hash":"7e0023474128fbe4d68c467704c41f1712432415","modified":499162500000},{"_id":"node_modules/hexo-theme-fluid/layout/page.ejs","hash":"ed5007a3feb8f14d3d2843271bfb298eb0c56219","modified":499162500000},{"_id":"node_modules/hexo-theme-fluid/layout/post.ejs","hash":"505bcc06e55066b7cc5551d9ac0694e7713bfab5","modified":499162500000},{"_id":"node_modules/hexo-theme-fluid/layout/tag.ejs","hash":"9d686364c4d16a1a9219471623af452035c5b966","modified":499162500000},{"_id":"node_modules/hexo-theme-fluid/layout/tags.ejs","hash":"1d06af34b6cf1d8a20d2eb565e309326ceba309f","modified":499162500000},{"_id":"node_modules/hexo-theme-fluid/layout/_partials/archive-list.ejs","hash":"7520fbf91f762207c2ab06b2c293235cd5b23905","modified":499162500000},{"_id":"node_modules/hexo-theme-fluid/layout/_partials/category-chains.ejs","hash":"18309584aab83bc4deb20723ebad832149dd2e24","modified":499162500000},{"_id":"node_modules/hexo-theme-fluid/layout/_partials/category-list.ejs","hash":"f8d2f1907450e61968e6d54443e9be8138196a77","modified":499162500000},{"_id":"node_modules/hexo-theme-fluid/layout/_partials/comments.ejs","hash":"d707c47b2638c94e489bc43d4cfd098b7c58447f","modified":499162500000},{"_id":"node_modules/hexo-theme-fluid/layout/_partials/css.ejs","hash":"85f6e051550907681ab4ed2e268ac8f6e9ebf931","modified":499162500000},{"_id":"node_modules/hexo-theme-fluid/layout/_partials/head.ejs","hash":"7b7b1d098726e86687a15fe3d520d178577ffcae","modified":499162500000},{"_id":"node_modules/hexo-theme-fluid/layout/_partials/footer.ejs","hash":"10ccfb8eef4e16182183c9a3e175c90d5b6397d3","modified":499162500000},{"_id":"node_modules/hexo-theme-fluid/layout/_partials/header.ejs","hash":"0d5e397d30051e5fbabe7b47cfd1f1e6a5820af1","modified":499162500000},{"_id":"node_modules/hexo-theme-fluid/layout/_partials/markdown-plugins.ejs","hash":"fc4bdf7de0cf1a66d0e5e4fba1b31d6f7ed49468","modified":499162500000},{"_id":"node_modules/hexo-theme-fluid/layout/_partials/paginator.ejs","hash":"0f38a2c238169edcb63fc46c23bfc529ff3859b7","modified":499162500000},{"_id":"node_modules/hexo-theme-fluid/layout/_partials/scripts.ejs","hash":"da5810785105e5075861593c7ac22c7aa9665a72","modified":499162500000},{"_id":"node_modules/hexo-theme-fluid/layout/_partials/search.ejs","hash":"70e1c929e084ca8a2648cedabf29b372511ea2b8","modified":499162500000},{"_id":"node_modules/hexo-theme-fluid/scripts/events/index.js","hash":"79de5a379b28cad759a49048351c7f6b8915bd7d","modified":499162500000},{"_id":"node_modules/hexo-theme-fluid/scripts/filters/default-injects.js","hash":"b2013ae8e189cd07ebc8a2ff48a78e153345210f","modified":499162500000},{"_id":"node_modules/hexo-theme-fluid/scripts/filters/locals.js","hash":"58d0fec976f6b1d35e7ea03edc45414088acf05c","modified":499162500000},{"_id":"node_modules/hexo-theme-fluid/scripts/filters/post-filter.js","hash":"d516b9db63067f9ea9c72cc75ae4ff358417e77d","modified":499162500000},{"_id":"node_modules/hexo-theme-fluid/scripts/generators/local-search.js","hash":"fc2c50405b771b06b7f6cfc4e9de97b992691555","modified":499162500000},{"_id":"node_modules/hexo-theme-fluid/scripts/generators/pages.js","hash":"d9971f15fbb6b775e3d31a1b9b45011959395010","modified":499162500000},{"_id":"node_modules/hexo-theme-fluid/scripts/helpers/date.js","hash":"9bda6382f61b40a20c24af466fe10c8366ebb74c","modified":499162500000},{"_id":"node_modules/hexo-theme-fluid/scripts/helpers/engine.js","hash":"d3a231d106795ce99cb0bc77eb65f9ae44515933","modified":499162500000},{"_id":"node_modules/hexo-theme-fluid/scripts/helpers/import.js","hash":"ca53e8dbf7d44cfd372cfa79ac60f35a7d5b0076","modified":499162500000},{"_id":"node_modules/hexo-theme-fluid/scripts/helpers/export-config.js","hash":"47e6dba7652a621a54067413490a11c8a89e3d7b","modified":499162500000},{"_id":"node_modules/hexo-theme-fluid/scripts/helpers/injects.js","hash":"1ad2ae6b11bd8806ee7dd6eb7140d8b54a95d613","modified":499162500000},{"_id":"node_modules/hexo-theme-fluid/scripts/helpers/page.js","hash":"4607607445233b3029ef20ed5e91de0da0a7f9c5","modified":499162500000},{"_id":"node_modules/hexo-theme-fluid/scripts/helpers/scope.js","hash":"d41d9d658fcb54964b388598e996747aadb85b0f","modified":499162500000},{"_id":"node_modules/hexo-theme-fluid/scripts/helpers/utils.js","hash":"226f99b465ff513de075a8e78b321d6cb62592ca","modified":499162500000},{"_id":"node_modules/hexo-theme-fluid/scripts/helpers/wordcount.js","hash":"4543b8954c5c2ca91191cc0d53cf071b3f26faaa","modified":499162500000},{"_id":"node_modules/hexo-theme-fluid/scripts/tags/button.js","hash":"3eb43a8cdea0a64576ad6b31b4df6c2bf5698d4c","modified":499162500000},{"_id":"node_modules/hexo-theme-fluid/scripts/helpers/url.js","hash":"2a6a8288176d0e0f6ec008056bf2745a86e8943e","modified":499162500000},{"_id":"node_modules/hexo-theme-fluid/scripts/tags/group-image.js","hash":"4aeebb797026f1df25646a5d69f7fde79b1bcd26","modified":499162500000},{"_id":"node_modules/hexo-theme-fluid/scripts/tags/label.js","hash":"f05a6d32cca79535b22907dc03edb9d3fa2d8176","modified":499162500000},{"_id":"node_modules/hexo-theme-fluid/scripts/tags/checkbox.js","hash":"4938610c3543a921a341bc074626d511cb1a4b45","modified":499162500000},{"_id":"node_modules/hexo-theme-fluid/scripts/tags/mermaid.js","hash":"75160561e1ef3603b6d2ad2938464ab1cb77fd38","modified":499162500000},{"_id":"node_modules/hexo-theme-fluid/scripts/tags/note.js","hash":"f52f3a005b41f48b4da274ac64710177c8d4502f","modified":499162500000},{"_id":"node_modules/hexo-theme-fluid/scripts/utils/object.js","hash":"33b57e4decdc5e75c518859f168c8ba80b2c665b","modified":499162500000},{"_id":"node_modules/hexo-theme-fluid/scripts/utils/compare-versions.js","hash":"dbbc928c914fc2bd242cd66aa0c45971aec13a5d","modified":499162500000},{"_id":"node_modules/hexo-theme-fluid/scripts/utils/url-join.js","hash":"718aab5e7b2059a06b093ca738de420d9afa44ba","modified":499162500000},{"_id":"node_modules/hexo-theme-fluid/scripts/utils/resolve.js","hash":"8c4a8b62aa8608f12f1e9046231dff04859dc3e9","modified":499162500000},{"_id":"node_modules/hexo-theme-fluid/source/css/highlight-dark.styl","hash":"45695ef75c31a4aa57324dd408b7e2327a337018","modified":499162500000},{"_id":"node_modules/hexo-theme-fluid/source/css/highlight.styl","hash":"a9efc52a646a9e585439c768557e3e3c9e3326dc","modified":499162500000},{"_id":"node_modules/hexo-theme-fluid/source/css/gitalk.css","hash":"a57b3cc8e04a0a4a27aefa07facf5b5e7bca0e76","modified":499162500000},{"_id":"node_modules/hexo-theme-fluid/source/css/main.styl","hash":"855ae5fe229c51afa57f7645f6997a27a705d7e4","modified":499162500000},{"_id":"node_modules/hexo-theme-fluid/source/img/avatar.png","hash":"fe739a158cc128f70f780eb5fa96f388b81d478f","modified":499162500000},{"_id":"node_modules/hexo-theme-fluid/source/img/fluid.png","hash":"64b215db2cb3af98fe639e94537cb5209f959c78","modified":499162500000},{"_id":"node_modules/hexo-theme-fluid/source/img/loading.gif","hash":"2d2fc0f947940f98c21afafef39ecf226a2e8d55","modified":499162500000},{"_id":"node_modules/hexo-theme-fluid/source/xml/local-search.xml","hash":"8c96ba6a064705602ce28d096fd7dd9069630a55","modified":499162500000},{"_id":"node_modules/hexo-theme-fluid/source/js/boot.js","hash":"38bd26c6b7acdafda86dda3560e6a3ca488d3c76","modified":499162500000},{"_id":"node_modules/hexo-theme-fluid/source/js/color-schema.js","hash":"76a198f8721352ebeaf5b2ef2f4db00612da4796","modified":499162500000},{"_id":"node_modules/hexo-theme-fluid/source/js/events.js","hash":"89e3561488a618ed0caeb9edf18e441978e29c25","modified":499162500000},{"_id":"node_modules/hexo-theme-fluid/source/img/police_beian.png","hash":"90efded6baa2dde599a9d6b1387973e8e64923ea","modified":499162500000},{"_id":"node_modules/hexo-theme-fluid/source/js/img-lazyload.js","hash":"cbdeca434ec4da51f488c821d51b4d23c73294af","modified":499162500000},{"_id":"node_modules/hexo-theme-fluid/source/js/leancloud.js","hash":"eff77c7a5c399fcaefda48884980571e15243fc9","modified":499162500000},{"_id":"node_modules/hexo-theme-fluid/source/js/local-search.js","hash":"cebcda5991b6a9ab9307c69542389ce9013f04f7","modified":499162500000},{"_id":"node_modules/hexo-theme-fluid/source/js/utils.js","hash":"45cc86f099db0a2c36ad49711ce66c2d598a2ab1","modified":499162500000},{"_id":"node_modules/hexo-theme-fluid/source/js/plugins.js","hash":"c34916291e392a774ff3e85c55badb83e8661297","modified":499162500000},{"_id":"node_modules/hexo-theme-fluid/layout/_partials/footer/beian.ejs","hash":"4fb9b5dd3f3e41a586d6af44e5069afe7c81fff2","modified":499162500000},{"_id":"node_modules/hexo-theme-fluid/layout/_partials/footer/statistics.ejs","hash":"454d8dd4c39f9494ebeb03ca0746f5bc122af76a","modified":499162500000},{"_id":"node_modules/hexo-theme-fluid/layout/_partials/comments/changyan.ejs","hash":"c9b2d68ed3d375f1953e7007307d2a3f75ed6249","modified":499162500000},{"_id":"node_modules/hexo-theme-fluid/layout/_partials/comments/cusdis.ejs","hash":"5f9dc012be27040bbe874d0c093c0d53958cc987","modified":499162500000},{"_id":"node_modules/hexo-theme-fluid/layout/_partials/comments/disqus.ejs","hash":"aab4a4d24c55231a37db308ae94414319cecdd9b","modified":499162500000},{"_id":"node_modules/hexo-theme-fluid/layout/_partials/comments/gitalk.ejs","hash":"843bc141a4545eb20d1c92fb63c85d459b4271ec","modified":499162500000},{"_id":"node_modules/hexo-theme-fluid/layout/_partials/comments/giscus.ejs","hash":"95f8b866b158eff9352c381c243b332a155a5110","modified":499162500000},{"_id":"node_modules/hexo-theme-fluid/layout/_partials/comments/livere.ejs","hash":"2264758fed57542a7389c7aa9f00f1aefa17eb87","modified":499162500000},{"_id":"node_modules/hexo-theme-fluid/layout/_partials/comments/remark42.ejs","hash":"d4e9532feeb02aed61bd15eda536b5b631454dac","modified":499162500000},{"_id":"node_modules/hexo-theme-fluid/layout/_partials/comments/utterances.ejs","hash":"c7ccf7f28308334a6da6f5425b141a24b5eca0e2","modified":499162500000},{"_id":"node_modules/hexo-theme-fluid/layout/_partials/comments/twikoo.ejs","hash":"e6820fb7f13662c42f8433ec95404238f4c1860c","modified":499162500000},{"_id":"node_modules/hexo-theme-fluid/layout/_partials/header/banner.ejs","hash":"e07757b59e7b89eea213d0e595cb5932f812fd32","modified":499162500000},{"_id":"node_modules/hexo-theme-fluid/layout/_partials/comments/waline.ejs","hash":"12727da7cf3ac83443270f550be4d1c06135b52b","modified":499162500000},{"_id":"node_modules/hexo-theme-fluid/layout/_partials/plugins/anchorjs.ejs","hash":"40181442d3a2b8734783a0ad7caf2d2522e3f2ab","modified":499162500000},{"_id":"node_modules/hexo-theme-fluid/layout/_partials/plugins/analytics.ejs","hash":"1327395a4dde1ea06c476b047fb110bcd269149f","modified":499162500000},{"_id":"node_modules/hexo-theme-fluid/layout/_partials/header/navigation.ejs","hash":"870db75e4e403a840c4463dfeed2c9114846e7cc","modified":499162500000},{"_id":"node_modules/hexo-theme-fluid/layout/_partials/comments/valine.ejs","hash":"19ba937553dddd317f827d682661a1066a7b1f30","modified":499162500000},{"_id":"node_modules/hexo-theme-fluid/layout/_partials/plugins/code-widget.ejs","hash":"3a505cba37942badf62a56bbb8b605b72af330aa","modified":499162500000},{"_id":"node_modules/hexo-theme-fluid/layout/_partials/plugins/encrypt.ejs","hash":"e3713fa78e0fc14a239360b020068d8513573ae4","modified":499162500000},{"_id":"node_modules/hexo-theme-fluid/layout/_partials/plugins/highlight.ejs","hash":"7529dd215b09d3557804333942377b9e20fa554e","modified":499162500000},{"_id":"node_modules/hexo-theme-fluid/layout/_partials/plugins/fancybox.ejs","hash":"9d1ea2a46b8c8ad8c168594d578f40764818ef13","modified":499162500000},{"_id":"node_modules/hexo-theme-fluid/layout/_partials/plugins/mermaid.ejs","hash":"e49506e9895e255e0e53f34a11d325f83109c1b0","modified":499162500000},{"_id":"node_modules/hexo-theme-fluid/layout/_partials/plugins/math.ejs","hash":"dcbf9a381ee76f2f1f75fcbc22c50a502ec85023","modified":499162500000},{"_id":"node_modules/hexo-theme-fluid/layout/_partials/plugins/nprogress.ejs","hash":"4c2d39ce816b8a6dcd6b53113c8695f8bd650a23","modified":499162500000},{"_id":"node_modules/hexo-theme-fluid/layout/_partials/plugins/typed.ejs","hash":"51faef29f8e464bcb2e73049b428b88c8dd8b40a","modified":499162500000},{"_id":"node_modules/hexo-theme-fluid/layout/_partials/post/category-bar.ejs","hash":"8772bce97ed297e7a88523f4e939ed6436c22f87","modified":499162500000},{"_id":"node_modules/hexo-theme-fluid/layout/_partials/post/meta-bottom.ejs","hash":"7079b27a7bc15a7dfa9209f6be6051bdec49ebad","modified":499162500000},{"_id":"node_modules/hexo-theme-fluid/layout/_partials/post/copyright.ejs","hash":"9d13392cea94b66d86422ad17c66e5ae67ce1d32","modified":499162500000},{"_id":"node_modules/hexo-theme-fluid/layout/_partials/post/meta-top.ejs","hash":"ce6e9f578f4faa45840abddf8f46af3f4b69c177","modified":499162500000},{"_id":"node_modules/hexo-theme-fluid/layout/_partials/post/sidebar-left.ejs","hash":"9992c99b3eb728ad195970e1b84d665f2c8691c4","modified":499162500000},{"_id":"node_modules/hexo-theme-fluid/layout/_partials/post/toc.ejs","hash":"635a89060fbf72eeda066fc4bd0a97462f069417","modified":499162500000},{"_id":"node_modules/hexo-theme-fluid/layout/_partials/post/sidebar-right.ejs","hash":"d5fcc9b60e02f869a29a8c17a16a6028ecc1e6d8","modified":499162500000},{"_id":"node_modules/hexo-theme-fluid/scripts/events/lib/compatible-configs.js","hash":"ef474d1fa5bbafc52619ced0f9dc7eaf2affb363","modified":499162500000},{"_id":"node_modules/hexo-theme-fluid/scripts/events/lib/footnote.js","hash":"2ec2ae03c79bb1ae7ac3fcf7e00fb52d1af2898d","modified":499162500000},{"_id":"node_modules/hexo-theme-fluid/scripts/events/lib/hello.js","hash":"44c5eb97b98813a07c659d6afedd17fad63b1821","modified":499162500000},{"_id":"node_modules/hexo-theme-fluid/scripts/events/lib/injects.js","hash":"5ae4b07204683e54b5a1b74e931702bbce2ac23e","modified":499162500000},{"_id":"node_modules/hexo-theme-fluid/scripts/events/lib/highlight.js","hash":"0f02df2244e275595e72163498d42f42bcf0de5e","modified":499162500000},{"_id":"node_modules/hexo-theme-fluid/scripts/events/lib/lazyload.js","hash":"9ba0d4bc224e22af8a5a48d6ff13e5a0fcfee2a4","modified":499162500000},{"_id":"node_modules/hexo-theme-fluid/scripts/events/lib/merge-configs.js","hash":"7c944c43b2ece5dd84859bd9d1fe955d13427387","modified":499162500000},{"_id":"node_modules/hexo-theme-fluid/source/css/_functions/base.styl","hash":"2e46f3f4e2c9fe34c1ff1c598738fc7349ae8188","modified":499162500000},{"_id":"node_modules/hexo-theme-fluid/source/css/_mixins/base.styl","hash":"542e306ee9494e8a78e44d6d7d409605d94caeb3","modified":499162500000},{"_id":"node_modules/hexo-theme-fluid/source/css/_pages/pages.styl","hash":"b8e887bc7fb3b765a1f8ec9448eff8603a41984f","modified":499162500000},{"_id":"node_modules/hexo-theme-fluid/source/css/_variables/base.styl","hash":"4ed5f0ae105ef4c7dd92eaf652ceda176c38e502","modified":499162500000},{"_id":"node_modules/hexo-theme-fluid/source/css/_pages/_about/about.styl","hash":"97fe42516ea531fdad771489b68aa8b2a7f6ae46","modified":499162500000},{"_id":"node_modules/hexo-theme-fluid/source/css/_pages/_archive/archive.styl","hash":"c475e6681546d30350eaed11f23081ecae80c375","modified":499162500000},{"_id":"node_modules/hexo-theme-fluid/source/css/_pages/_base/base.styl","hash":"643284c567665f96915f0b64e59934dda315f74d","modified":499162500000},{"_id":"node_modules/hexo-theme-fluid/source/css/_pages/_base/color-schema.styl","hash":"61279540c2623ea4bf93e40613d41380839b92d3","modified":499162500000},{"_id":"node_modules/hexo-theme-fluid/source/css/_pages/_base/inline.styl","hash":"411a3fa3f924a87e00ff04d18b5c83283b049a4d","modified":499162500000},{"_id":"node_modules/hexo-theme-fluid/source/css/_pages/_base/keyframes.styl","hash":"94065ea50f5bef7566d184f2422f6ac20866ba22","modified":499162500000},{"_id":"node_modules/hexo-theme-fluid/source/css/_pages/_category/category-bar.styl","hash":"cc6df43fef6bb3efecbfdd8b9e467424a1dea581","modified":499162500000},{"_id":"node_modules/hexo-theme-fluid/source/css/_pages/_category/category-chain.styl","hash":"0cdf7ef50dfd0669d3b257821384ff31cd81b7c9","modified":499162500000},{"_id":"node_modules/hexo-theme-fluid/source/css/_pages/_category/category-list.styl","hash":"7edfe1b571ecca7d08f5f4dbcf76f4ffdcfbf0b5","modified":499162500000},{"_id":"node_modules/hexo-theme-fluid/source/css/_pages/_index/index.styl","hash":"0acbd71633bcc7191672ea4e1b2277bea350d73b","modified":499162500000},{"_id":"node_modules/hexo-theme-fluid/source/css/_pages/_links/links.styl","hash":"5c7f2044e3f1da05a3229537c06bd879836f8d6e","modified":499162500000},{"_id":"node_modules/hexo-theme-fluid/source/css/_pages/_post/comment.styl","hash":"780f3788e7357bcd3f3262d781cb91bb53976a93","modified":499162500000},{"_id":"node_modules/hexo-theme-fluid/source/css/_pages/_post/highlight.styl","hash":"4df764d298fe556e501db4afc2b05686fe6ebcfb","modified":499162500000},{"_id":"node_modules/hexo-theme-fluid/source/css/_pages/_post/markdown.styl","hash":"1e3d3a82721e7c10bcfcecec6d81cf2979039452","modified":499162500000},{"_id":"node_modules/hexo-theme-fluid/source/css/_pages/_post/post-page.styl","hash":"127bb5391370afe7fef2a297084d76406bc5e902","modified":499162500000},{"_id":"node_modules/hexo-theme-fluid/source/css/_pages/_post/post-tag.styl","hash":"27f70062415ccf66a9b6f4952db124fc1471fda5","modified":499162500000},{"_id":"node_modules/hexo-theme-fluid/source/css/_pages/_tag/tags.styl","hash":"65bfc01c76abc927fa1a23bf2422892b0d566c3f","modified":499162500000},{"_id":"node_modules/hexo-theme-fluid/source/css/_pages/_base/_widget/banner.styl","hash":"7a0bd629bc234fc75e3cc8e3715ffada92f09e73","modified":499162500000},{"_id":"node_modules/hexo-theme-fluid/source/css/_pages/_base/_widget/anchorjs.styl","hash":"e0cebda4a6f499aff75e71417d88caa7ceb13b94","modified":499162500000},{"_id":"node_modules/hexo-theme-fluid/source/css/_pages/_base/_widget/code-widget.styl","hash":"b66ab013f0f37d724a149b85b3c7432afcf460ad","modified":499162500000},{"_id":"node_modules/hexo-theme-fluid/source/css/_pages/_base/_widget/board.styl","hash":"4397037fc3f0033dbe546c33cd9dbdabd8cb1632","modified":499162500000},{"_id":"node_modules/hexo-theme-fluid/source/css/_pages/_base/_widget/copyright.styl","hash":"26f71a9cd60d96bb0cb5bbdf58150b8e524d9707","modified":499162500000},{"_id":"node_modules/hexo-theme-fluid/source/css/_pages/_base/_widget/footer.styl","hash":"2caaca71dd1ff63d583099ed817677dd267b457e","modified":499162500000},{"_id":"node_modules/hexo-theme-fluid/source/css/_pages/_base/_widget/header.styl","hash":"c4459248c66ea1326feed021179b847ae91d465f","modified":499162500000},{"_id":"node_modules/hexo-theme-fluid/source/css/_pages/_base/_widget/footnote.styl","hash":"ae9289cc89649af2042907f8a003303b987f3404","modified":499162500000},{"_id":"node_modules/hexo-theme-fluid/source/css/_pages/_base/_widget/modal.styl","hash":"adf6c1e5c8e1fb41c77ce6e2258001df61245aa2","modified":499162500000},{"_id":"node_modules/hexo-theme-fluid/source/css/_pages/_base/_widget/ngrogress.styl","hash":"5d225357b4a58d46118e6616377168336ed44cb2","modified":499162500000},{"_id":"node_modules/hexo-theme-fluid/source/css/_pages/_base/_widget/noscript.styl","hash":"0cf2f2bb44f456150d428016675d5876a9d2e2aa","modified":499162500000},{"_id":"node_modules/hexo-theme-fluid/source/css/_pages/_base/_widget/qrcode.styl","hash":"78704a94c0436097abfb0e0a57abeb3429c749b7","modified":499162500000},{"_id":"node_modules/hexo-theme-fluid/source/css/_pages/_base/_widget/pagination.styl","hash":"8bb1b68e5f3552cb48c2ffa31edbc53646a8fb4c","modified":499162500000},{"_id":"node_modules/hexo-theme-fluid/source/css/_pages/_base/_widget/scroll-btn.styl","hash":"f0e429a27fa8a7658fcbddbb4d4dbe4afa12499a","modified":499162500000},{"_id":"node_modules/hexo-theme-fluid/source/css/_pages/_base/_widget/toc.styl","hash":"9e7452aa2372153f25d7a4675c9d36d281a65d24","modified":499162500000},{"_id":"node_modules/hexo-theme-fluid/source/css/_pages/_base/_widget/search.styl","hash":"10f7e91a91e681fb9fe46f9df7707b9ef78707c8","modified":499162500000},{"_id":"node_modules/hexo-theme-fluid/source/img/default.png","hash":"167a12978d80371cf578c8a2e45c24a2eb25b6fb","modified":499162500000},{"_id":"public/js/duration.js","hash":"6de16b86f5577f232406b2d4c635dd987ab591bd","modified":1671206723692},{"_id":"public/js/music.js","hash":"217fbd97a131ccc34e084ccc50a5cbe16772a415","modified":1671206723692},{"_id":"public/styles/site.css","hash":"90dca2cabc549d0e03a97f513171b138b97cafe6","modified":1671206723692},{"_id":"public/local-search.xml","hash":"5d0015b444e17a73dfb725987e0c5524bf3dfbb7","modified":1671206723692},{"_id":"public/about/index.html","hash":"6399105bc28abd18ba9e153d91cd6a40623ec74b","modified":1671206723692},{"_id":"public/categories/index.html","hash":"08e2b13dbbbf0b58b7f800e90a3f2d850b632059","modified":1671206723692},{"_id":"public/tags/index.html","hash":"59dee6240be04c45c2a1d834f3f35d0a6e9f022c","modified":1671206723692},{"_id":"public/archives/index.html","hash":"36ffa30ff95b7b26c145709e711859f56c25040b","modified":1671206723692},{"_id":"public/archives/2022/index.html","hash":"ce5d144ac2505e0c6f0f6048444a36a394c9de49","modified":1671206723692},{"_id":"public/archives/2022/11/index.html","hash":"25c7ca491f7a5bc37e95082708cd74518a04564b","modified":1671206723692},{"_id":"public/archives/2022/12/index.html","hash":"58a541aef7d42c61bb0886b695fe8f5b38f36e8a","modified":1671206723692},{"_id":"public/categories/服务器/index.html","hash":"3f67c05b37ac9b70573aa6726198faed5dc2ef7f","modified":1671206723692},{"_id":"public/tags/NET/index.html","hash":"c46ae7b2620c9be658e3d144e080faeca3f4ddd2","modified":1671206723692},{"_id":"public/tags/Docker/index.html","hash":"ee805033dc51a144ee77ed1360a57aadc83b806e","modified":1671206723692},{"_id":"public/tags/EntityFrameworkCore/index.html","hash":"a0805e4b9c04425ef43531cd982720ef7b6215b1","modified":1671206723692},{"_id":"public/tags/Backend/index.html","hash":"ebafb08bf29feddefeb5d600e45f4feeeb256179","modified":1671206723692},{"_id":"public/tags/DI/index.html","hash":"b3da119111d3679f3510adff71eff9f2a14354c8","modified":1671206723692},{"_id":"public/tags/C/index.html","hash":"6f0aa5bb56b24e5131afb49e7c4b5eb2c0195dac","modified":1671206723692},{"_id":"public/tags/SSH/index.html","hash":"b9baaa4f7b877fc6d7154a0a8fe8cc1fb25b58df","modified":1671206723692},{"_id":"public/404.html","hash":"4f118f1ce63dbf6a51a036e9a95fe3d0916f3c32","modified":1671206723692},{"_id":"public/links/index.html","hash":"c607eeb523d9a6193e872e6e000d7ad6a0952971","modified":1671206723692},{"_id":"public/post/2022-12-16-ssh-upload.html","hash":"8d2bf8d9dff0530e09db3e32dfd359055bb16b87","modified":1671206723692},{"_id":"public/post/2022-11-25-migrations.html","hash":"5518e59541b35c63fa2a7958da652e326b05950b","modified":1671206723692},{"_id":"public/post/2022-11-25-dotnet-docker.html","hash":"ac699ace5df72c6a4447c32cc8f937a7cd2d9d3b","modified":1671206723692},{"_id":"public/post/2022-11-26-dotnet-auto-inject.html","hash":"1865ecdbb383f692772b5f5fc4df80784b286db3","modified":1671206723692},{"_id":"public/index.html","hash":"1d10b74edc9118005afacf682c79897a4a4a02a9","modified":1671206723692},{"_id":"public/img/loading.gif","hash":"2d2fc0f947940f98c21afafef39ecf226a2e8d55","modified":1671206723692},{"_id":"public/img/avatar.png","hash":"fe739a158cc128f70f780eb5fa96f388b81d478f","modified":1671206723692},{"_id":"public/xml/local-search.xml","hash":"8c96ba6a064705602ce28d096fd7dd9069630a55","modified":1671206723692},{"_id":"public/img/fluid.png","hash":"64b215db2cb3af98fe639e94537cb5209f959c78","modified":1671206723692},{"_id":"public/img/police_beian.png","hash":"90efded6baa2dde599a9d6b1387973e8e64923ea","modified":1671206723692},{"_id":"public/css/highlight-dark.css","hash":"2b0daa6e5343da9dbb26d617d224b8397e48556b","modified":1671206723692},{"_id":"public/css/highlight.css","hash":"0f9a477d33d3b15ebe7e163e756fb7c54c7ded6b","modified":1671206723692},{"_id":"public/css/gitalk.css","hash":"a57b3cc8e04a0a4a27aefa07facf5b5e7bca0e76","modified":1671206723692},{"_id":"public/js/boot.js","hash":"38bd26c6b7acdafda86dda3560e6a3ca488d3c76","modified":1671206723692},{"_id":"public/js/color-schema.js","hash":"76a198f8721352ebeaf5b2ef2f4db00612da4796","modified":1671206723692},{"_id":"public/js/events.js","hash":"89e3561488a618ed0caeb9edf18e441978e29c25","modified":1671206723692},{"_id":"public/js/img-lazyload.js","hash":"cbdeca434ec4da51f488c821d51b4d23c73294af","modified":1671206723692},{"_id":"public/js/utils.js","hash":"45cc86f099db0a2c36ad49711ce66c2d598a2ab1","modified":1671206723692},{"_id":"public/js/leancloud.js","hash":"eff77c7a5c399fcaefda48884980571e15243fc9","modified":1671206723692},{"_id":"public/js/plugins.js","hash":"c34916291e392a774ff3e85c55badb83e8661297","modified":1671206723692},{"_id":"public/js/local-search.js","hash":"cebcda5991b6a9ab9307c69542389ce9013f04f7","modified":1671206723692},{"_id":"public/css/main.css","hash":"e43c3f19d3caac4ba47ae581a32dae38791cdba8","modified":1671206723692},{"_id":"public/img/default.png","hash":"167a12978d80371cf578c8a2e45c24a2eb25b6fb","modified":1671206723692}],"Category":[{"name":"服务器","_id":"clbqpc1ec000q9wq9h3vkeb6p"}],"Data":[],"Page":[{"title":"关于","layout":"about","date":"2022-11-25T11:52:43.000Z","_content":"\n#### 关于我们","source":"about/index.md","raw":"---\ntitle: 关于\nlayout: about\ndate: 2022-11-25 19:52:43\n---\n\n#### 关于我们","updated":"2022-12-16T11:58:56.315Z","path":"about/index.html","comments":1,"_id":"clbqpc1d300009wq91o4jet1t","content":"<h4 id=\"关于我们\"><a href=\"#关于我们\" class=\"headerlink\" title=\"关于我们\"></a>关于我们</h4>","site":{"data":{}},"excerpt":"","more":"<h4 id=\"关于我们\"><a href=\"#关于我们\" class=\"headerlink\" title=\"关于我们\"></a>关于我们</h4>"},{"_content":"!(function () {\n  /** 计时起始时间，自行修改 **/\n  var start = new Date(\"2022/10/25 10:10:03\");\n\n  function update() {\n    var now = new Date();\n    now.setTime(now.getTime() + 250);\n    days = (now - start) / 1000 / 60 / 60 / 24;\n    dnum = Math.floor(days);\n    hours = (now - start) / 1000 / 60 / 60 - 24 * dnum;\n    hnum = Math.floor(hours);\n    if (String(hnum).length === 1) {\n      hnum = \"0\" + hnum;\n    }\n    minutes = (now - start) / 1000 / 60 - 24 * 60 * dnum - 60 * hnum;\n    mnum = Math.floor(minutes);\n    if (String(mnum).length === 1) {\n      mnum = \"0\" + mnum;\n    }\n    seconds =\n      (now - start) / 1000 - 24 * 60 * 60 * dnum - 60 * 60 * hnum - 60 * mnum;\n    snum = Math.round(seconds);\n    if (String(snum).length === 1) {\n      snum = \"0\" + snum;\n    }\n    document.getElementById(\"timeDate\").innerHTML =\n      \"本站安全运行&nbsp\" + dnum + \"&nbsp天\";\n    document.getElementById(\"times\").innerHTML =\n      hnum + \"&nbsp小时&nbsp\" + mnum + \"&nbsp分&nbsp\" + snum + \"&nbsp秒\";\n  }\n\n  update();\n  setInterval(update, 1000);\n})();\n","source":"js/duration.js","raw":"!(function () {\n  /** 计时起始时间，自行修改 **/\n  var start = new Date(\"2022/10/25 10:10:03\");\n\n  function update() {\n    var now = new Date();\n    now.setTime(now.getTime() + 250);\n    days = (now - start) / 1000 / 60 / 60 / 24;\n    dnum = Math.floor(days);\n    hours = (now - start) / 1000 / 60 / 60 - 24 * dnum;\n    hnum = Math.floor(hours);\n    if (String(hnum).length === 1) {\n      hnum = \"0\" + hnum;\n    }\n    minutes = (now - start) / 1000 / 60 - 24 * 60 * dnum - 60 * hnum;\n    mnum = Math.floor(minutes);\n    if (String(mnum).length === 1) {\n      mnum = \"0\" + mnum;\n    }\n    seconds =\n      (now - start) / 1000 - 24 * 60 * 60 * dnum - 60 * 60 * hnum - 60 * mnum;\n    snum = Math.round(seconds);\n    if (String(snum).length === 1) {\n      snum = \"0\" + snum;\n    }\n    document.getElementById(\"timeDate\").innerHTML =\n      \"本站安全运行&nbsp\" + dnum + \"&nbsp天\";\n    document.getElementById(\"times\").innerHTML =\n      hnum + \"&nbsp小时&nbsp\" + mnum + \"&nbsp分&nbsp\" + snum + \"&nbsp秒\";\n  }\n\n  update();\n  setInterval(update, 1000);\n})();\n","date":"2022-12-16T11:58:56.325Z","updated":"2022-12-16T11:58:56.325Z","path":"js/duration.js","layout":"false","title":"","comments":1,"_id":"clbqpc1dj00029wq91607htkp","content":"!(function () {\n  /** 计时起始时间，自行修改 **/\n  var start = new Date(\"2022/10/25 10:10:03\");\n\n  function update() {\n    var now = new Date();\n    now.setTime(now.getTime() + 250);\n    days = (now - start) / 1000 / 60 / 60 / 24;\n    dnum = Math.floor(days);\n    hours = (now - start) / 1000 / 60 / 60 - 24 * dnum;\n    hnum = Math.floor(hours);\n    if (String(hnum).length === 1) {\n      hnum = \"0\" + hnum;\n    }\n    minutes = (now - start) / 1000 / 60 - 24 * 60 * dnum - 60 * hnum;\n    mnum = Math.floor(minutes);\n    if (String(mnum).length === 1) {\n      mnum = \"0\" + mnum;\n    }\n    seconds =\n      (now - start) / 1000 - 24 * 60 * 60 * dnum - 60 * 60 * hnum - 60 * mnum;\n    snum = Math.round(seconds);\n    if (String(snum).length === 1) {\n      snum = \"0\" + snum;\n    }\n    document.getElementById(\"timeDate\").innerHTML =\n      \"本站安全运行&nbsp\" + dnum + \"&nbsp天\";\n    document.getElementById(\"times\").innerHTML =\n      hnum + \"&nbsp小时&nbsp\" + mnum + \"&nbsp分&nbsp\" + snum + \"&nbsp秒\";\n  }\n\n  update();\n  setInterval(update, 1000);\n})();\n","site":{"data":{}},"excerpt":"","more":"!(function () {\n  /** 计时起始时间，自行修改 **/\n  var start = new Date(\"2022/10/25 10:10:03\");\n\n  function update() {\n    var now = new Date();\n    now.setTime(now.getTime() + 250);\n    days = (now - start) / 1000 / 60 / 60 / 24;\n    dnum = Math.floor(days);\n    hours = (now - start) / 1000 / 60 / 60 - 24 * dnum;\n    hnum = Math.floor(hours);\n    if (String(hnum).length === 1) {\n      hnum = \"0\" + hnum;\n    }\n    minutes = (now - start) / 1000 / 60 - 24 * 60 * dnum - 60 * hnum;\n    mnum = Math.floor(minutes);\n    if (String(mnum).length === 1) {\n      mnum = \"0\" + mnum;\n    }\n    seconds =\n      (now - start) / 1000 - 24 * 60 * 60 * dnum - 60 * 60 * hnum - 60 * mnum;\n    snum = Math.round(seconds);\n    if (String(snum).length === 1) {\n      snum = \"0\" + snum;\n    }\n    document.getElementById(\"timeDate\").innerHTML =\n      \"本站安全运行&nbsp\" + dnum + \"&nbsp天\";\n    document.getElementById(\"times\").innerHTML =\n      hnum + \"&nbsp小时&nbsp\" + mnum + \"&nbsp分&nbsp\" + snum + \"&nbsp秒\";\n  }\n\n  update();\n  setInterval(update, 1000);\n})();\n"},{"_content":"const ap = new APlayer({\n  container: document.getElementById(\"aplayer\"),\n  fixed: true,\n  autoplay: true,\n  audio: [\n    {\n      name: \"\",\n      artist: \"\",\n      url: \"\",\n      cover: \"\",\n    },\n  ],\n});\n","source":"js/music.js","raw":"const ap = new APlayer({\n  container: document.getElementById(\"aplayer\"),\n  fixed: true,\n  autoplay: true,\n  audio: [\n    {\n      name: \"\",\n      artist: \"\",\n      url: \"\",\n      cover: \"\",\n    },\n  ],\n});\n","date":"2022-12-16T11:58:56.326Z","updated":"2022-12-16T11:58:56.326Z","path":"js/music.js","layout":"false","title":"","comments":1,"_id":"clbqpc1dt00059wq9aguchm5c","content":"const ap = new APlayer({\n  container: document.getElementById(\"aplayer\"),\n  fixed: true,\n  autoplay: true,\n  audio: [\n    {\n      name: \"\",\n      artist: \"\",\n      url: \"\",\n      cover: \"\",\n    },\n  ],\n});\n","site":{"data":{}},"excerpt":"","more":"const ap = new APlayer({\n  container: document.getElementById(\"aplayer\"),\n  fixed: true,\n  autoplay: true,\n  audio: [\n    {\n      name: \"\",\n      artist: \"\",\n      url: \"\",\n      cover: \"\",\n    },\n  ],\n});\n"},{"title":"分类","date":"2022-11-25T13:31:30.000Z","types":"categories","_content":"","source":"categories/index.md","raw":"---\ntitle: 分类\ndate: 2022-11-25 21:31:30\ntypes: categories\n---\n","updated":"2022-12-15T12:35:45.092Z","path":"categories/index.html","comments":1,"layout":"page","_id":"clbqpc1dw00079wq9glwyabb5","content":"","site":{"data":{}},"excerpt":"","more":""},{"_content":"#netease {\n  position: fixed;\n  bottom: 0;\n  left: 0;\n}\n","source":"styles/site.css","raw":"#netease {\n  position: fixed;\n  bottom: 0;\n  left: 0;\n}\n","date":"2022-12-16T12:31:01.533Z","updated":"2022-12-16T12:31:01.533Z","path":"styles/site.css","layout":"false","title":"","comments":1,"_id":"clbqpc1dx00089wq9393r2l5h","content":"#netease {\n  position: fixed;\n  bottom: 0;\n  left: 0;\n}\n","site":{"data":{}},"excerpt":"","more":"#netease {\n  position: fixed;\n  bottom: 0;\n  left: 0;\n}\n"},{"title":"tags","date":"2022-11-25T13:18:50.000Z","type":"tags","_content":"","source":"tags/index.md","raw":"---\ntitle: tags\ndate: 2022-11-25 21:18:50\ntype: tags\n---\n","updated":"2022-12-15T12:35:45.093Z","path":"tags/index.html","comments":1,"layout":"page","_id":"clbqpc1dy000a9wq98inxcebk","content":"","site":{"data":{}},"excerpt":"","more":""}],"Post":[{"title":"Docker 部署 .NET 项目","index_img":"https://picgo.ddvlhr.red/picgo/202211260135930.jpeg","banner_img":"https://picgo.ddvlhr.red/picgo/202211260135930.jpeg","excerpt":"使用 Dockerfile 在 docker 中部署 .NET 项目.","_content":"## 1.创建 Dockerfile 文件\n``` dockerfile\nFROM mcr.microsoft.com/dotnet/aspnet:6.0 AS base\nCOPY . /publish\nWORKDIR /publish\nEXPOSE 80\n\n# 指定容器运行端口\n# EXPOSE 指定的端口无效, docker 还是会默认使用 80 端口,如果要使用其他端口,请使用如下指令\nENV ASPNETCORE_URLS=http://+:5001\n\n# dotnet-project.dll 为项目编译后的 dll 文件\nENTRYPOINT [\"dotnet\", \"dotnet-project.dll\"]\n```\n## 2.创建 start.sh 文件\n``` shell\n# 容器名称\nAPP=\"api\"\nVERSION=\"v1\"\nIMAGE=$APP:$VERSION\nDOCKER_NAME=\"$APP_$VERSION\"\n# Dockerfile 文件路径\nAPP_DIR=\"/home/apps/csharp/api/publish/Dockerfile\"\n# 项目编译后的 dll 文件路径\nPUBLISH_DIR=\"/home/apps/csharp/api/publish\"\necho \"--- delete container and image ---\"\n# 停止并删除容器和镜像\ndocker stop $DOCKER_NAME\ndocker rm $DOCKER_NAME\ndocker rmi $IMAGE\necho \"+++ build docker images\"\n# 重新构建镜像\ndocker build -t $IMAGE .\necho \"--- run docker images ---\"\n# 启动容器\nCONTAINER_ID=`docker run -dit -p 7229:7229 --name=$DOCKER_NAME --restart=always -v $PUBLISH_DIR:/publish $IMAGE`\n#docker logs -f $CONTAINER_ID\n```\n## 3.部署项目\n将发布后的文件夹上传到服务器后, 在项目文件夹下执行如下指令即可将项目部署到 docker 中\n\n``` shell\n$ sh start.sh\n```","source":"_posts/2022-11-25-dotnet-docker.md","raw":"---\ntitle: Docker 部署 .NET 项目\nindex_img: https://picgo.ddvlhr.red/picgo/202211260135930.jpeg\nbanner_img: https://picgo.ddvlhr.red/picgo/202211260135930.jpeg\nexcerpt: 使用 Dockerfile 在 docker 中部署 .NET 项目.\ntags: [.NET, Docker]\n---\n## 1.创建 Dockerfile 文件\n``` dockerfile\nFROM mcr.microsoft.com/dotnet/aspnet:6.0 AS base\nCOPY . /publish\nWORKDIR /publish\nEXPOSE 80\n\n# 指定容器运行端口\n# EXPOSE 指定的端口无效, docker 还是会默认使用 80 端口,如果要使用其他端口,请使用如下指令\nENV ASPNETCORE_URLS=http://+:5001\n\n# dotnet-project.dll 为项目编译后的 dll 文件\nENTRYPOINT [\"dotnet\", \"dotnet-project.dll\"]\n```\n## 2.创建 start.sh 文件\n``` shell\n# 容器名称\nAPP=\"api\"\nVERSION=\"v1\"\nIMAGE=$APP:$VERSION\nDOCKER_NAME=\"$APP_$VERSION\"\n# Dockerfile 文件路径\nAPP_DIR=\"/home/apps/csharp/api/publish/Dockerfile\"\n# 项目编译后的 dll 文件路径\nPUBLISH_DIR=\"/home/apps/csharp/api/publish\"\necho \"--- delete container and image ---\"\n# 停止并删除容器和镜像\ndocker stop $DOCKER_NAME\ndocker rm $DOCKER_NAME\ndocker rmi $IMAGE\necho \"+++ build docker images\"\n# 重新构建镜像\ndocker build -t $IMAGE .\necho \"--- run docker images ---\"\n# 启动容器\nCONTAINER_ID=`docker run -dit -p 7229:7229 --name=$DOCKER_NAME --restart=always -v $PUBLISH_DIR:/publish $IMAGE`\n#docker logs -f $CONTAINER_ID\n```\n## 3.部署项目\n将发布后的文件夹上传到服务器后, 在项目文件夹下执行如下指令即可将项目部署到 docker 中\n\n``` shell\n$ sh start.sh\n```","slug":"2022-11-25-dotnet-docker","published":1,"date":"2022-12-15T12:35:45.090Z","updated":"2022-12-16T11:58:56.311Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clbqpc1dc00019wq9ayx44q92","content":"<h2 id=\"1-创建-Dockerfile-文件\"><a href=\"#1-创建-Dockerfile-文件\" class=\"headerlink\" title=\"1.创建 Dockerfile 文件\"></a>1.创建 Dockerfile 文件</h2><figure class=\"highlight dockerfile\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs dockerfile\"><span class=\"hljs-keyword\">FROM</span> mcr.microsoft.com/dotnet/aspnet:<span class=\"hljs-number\">6.0</span> AS base<br><span class=\"hljs-keyword\">COPY</span><span class=\"language-bash\"> . /publish</span><br><span class=\"hljs-keyword\">WORKDIR</span><span class=\"language-bash\"> /publish</span><br><span class=\"hljs-keyword\">EXPOSE</span> <span class=\"hljs-number\">80</span><br><br><span class=\"hljs-comment\"># 指定容器运行端口</span><br><span class=\"hljs-comment\"># EXPOSE 指定的端口无效, docker 还是会默认使用 80 端口,如果要使用其他端口,请使用如下指令</span><br><span class=\"hljs-keyword\">ENV</span> ASPNETCORE_URLS=http://+:<span class=\"hljs-number\">5001</span><br><br><span class=\"hljs-comment\"># dotnet-project.dll 为项目编译后的 dll 文件</span><br><span class=\"hljs-keyword\">ENTRYPOINT</span><span class=\"language-bash\"> [<span class=\"hljs-string\">&quot;dotnet&quot;</span>, <span class=\"hljs-string\">&quot;dotnet-project.dll&quot;</span>]</span><br></code></pre></td></tr></table></figure>\n<h2 id=\"2-创建-start-sh-文件\"><a href=\"#2-创建-start-sh-文件\" class=\"headerlink\" title=\"2.创建 start.sh 文件\"></a>2.创建 start.sh 文件</h2><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs shell\"><span class=\"hljs-meta prompt_\"># </span><span class=\"language-bash\">容器名称</span><br>APP=&quot;api&quot;<br>VERSION=&quot;v1&quot;<br>IMAGE=$APP:$VERSION<br>DOCKER_NAME=&quot;$APP_$VERSION&quot;<br><span class=\"hljs-meta prompt_\"># </span><span class=\"language-bash\">Dockerfile 文件路径</span><br>APP_DIR=&quot;/home/apps/csharp/api/publish/Dockerfile&quot;<br><span class=\"hljs-meta prompt_\"># </span><span class=\"language-bash\">项目编译后的 dll 文件路径</span><br>PUBLISH_DIR=&quot;/home/apps/csharp/api/publish&quot;<br>echo &quot;--- delete container and image ---&quot;<br><span class=\"hljs-meta prompt_\"># </span><span class=\"language-bash\">停止并删除容器和镜像</span><br>docker stop $DOCKER_NAME<br>docker rm $DOCKER_NAME<br>docker rmi $IMAGE<br>echo &quot;+++ build docker images&quot;<br><span class=\"hljs-meta prompt_\"># </span><span class=\"language-bash\">重新构建镜像</span><br>docker build -t $IMAGE .<br>echo &quot;--- run docker images ---&quot;<br><span class=\"hljs-meta prompt_\"># </span><span class=\"language-bash\">启动容器</span><br>CONTAINER_ID=`docker run -dit -p 7229:7229 --name=$DOCKER_NAME --restart=always -v $PUBLISH_DIR:/publish $IMAGE`<br><span class=\"hljs-meta prompt_\">#</span><span class=\"language-bash\">docker logs -f <span class=\"hljs-variable\">$CONTAINER_ID</span></span><br></code></pre></td></tr></table></figure>\n<h2 id=\"3-部署项目\"><a href=\"#3-部署项目\" class=\"headerlink\" title=\"3.部署项目\"></a>3.部署项目</h2><p>将发布后的文件夹上传到服务器后, 在项目文件夹下执行如下指令即可将项目部署到 docker 中</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs shell\"><span class=\"hljs-meta prompt_\">$ </span><span class=\"language-bash\">sh start.sh</span><br></code></pre></td></tr></table></figure>","site":{"data":{}},"more":"<h2 id=\"1-创建-Dockerfile-文件\"><a href=\"#1-创建-Dockerfile-文件\" class=\"headerlink\" title=\"1.创建 Dockerfile 文件\"></a>1.创建 Dockerfile 文件</h2><figure class=\"highlight dockerfile\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs dockerfile\"><span class=\"hljs-keyword\">FROM</span> mcr.microsoft.com/dotnet/aspnet:<span class=\"hljs-number\">6.0</span> AS base<br><span class=\"hljs-keyword\">COPY</span><span class=\"language-bash\"> . /publish</span><br><span class=\"hljs-keyword\">WORKDIR</span><span class=\"language-bash\"> /publish</span><br><span class=\"hljs-keyword\">EXPOSE</span> <span class=\"hljs-number\">80</span><br><br><span class=\"hljs-comment\"># 指定容器运行端口</span><br><span class=\"hljs-comment\"># EXPOSE 指定的端口无效, docker 还是会默认使用 80 端口,如果要使用其他端口,请使用如下指令</span><br><span class=\"hljs-keyword\">ENV</span> ASPNETCORE_URLS=http://+:<span class=\"hljs-number\">5001</span><br><br><span class=\"hljs-comment\"># dotnet-project.dll 为项目编译后的 dll 文件</span><br><span class=\"hljs-keyword\">ENTRYPOINT</span><span class=\"language-bash\"> [<span class=\"hljs-string\">&quot;dotnet&quot;</span>, <span class=\"hljs-string\">&quot;dotnet-project.dll&quot;</span>]</span><br></code></pre></td></tr></table></figure>\n<h2 id=\"2-创建-start-sh-文件\"><a href=\"#2-创建-start-sh-文件\" class=\"headerlink\" title=\"2.创建 start.sh 文件\"></a>2.创建 start.sh 文件</h2><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs shell\"><span class=\"hljs-meta prompt_\"># </span><span class=\"language-bash\">容器名称</span><br>APP=&quot;api&quot;<br>VERSION=&quot;v1&quot;<br>IMAGE=$APP:$VERSION<br>DOCKER_NAME=&quot;$APP_$VERSION&quot;<br><span class=\"hljs-meta prompt_\"># </span><span class=\"language-bash\">Dockerfile 文件路径</span><br>APP_DIR=&quot;/home/apps/csharp/api/publish/Dockerfile&quot;<br><span class=\"hljs-meta prompt_\"># </span><span class=\"language-bash\">项目编译后的 dll 文件路径</span><br>PUBLISH_DIR=&quot;/home/apps/csharp/api/publish&quot;<br>echo &quot;--- delete container and image ---&quot;<br><span class=\"hljs-meta prompt_\"># </span><span class=\"language-bash\">停止并删除容器和镜像</span><br>docker stop $DOCKER_NAME<br>docker rm $DOCKER_NAME<br>docker rmi $IMAGE<br>echo &quot;+++ build docker images&quot;<br><span class=\"hljs-meta prompt_\"># </span><span class=\"language-bash\">重新构建镜像</span><br>docker build -t $IMAGE .<br>echo &quot;--- run docker images ---&quot;<br><span class=\"hljs-meta prompt_\"># </span><span class=\"language-bash\">启动容器</span><br>CONTAINER_ID=`docker run -dit -p 7229:7229 --name=$DOCKER_NAME --restart=always -v $PUBLISH_DIR:/publish $IMAGE`<br><span class=\"hljs-meta prompt_\">#</span><span class=\"language-bash\">docker logs -f <span class=\"hljs-variable\">$CONTAINER_ID</span></span><br></code></pre></td></tr></table></figure>\n<h2 id=\"3-部署项目\"><a href=\"#3-部署项目\" class=\"headerlink\" title=\"3.部署项目\"></a>3.部署项目</h2><p>将发布后的文件夹上传到服务器后, 在项目文件夹下执行如下指令即可将项目部署到 docker 中</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs shell\"><span class=\"hljs-meta prompt_\">$ </span><span class=\"language-bash\">sh start.sh</span><br></code></pre></td></tr></table></figure>"},{"title":".NET EFCore 迁移工具","index_img":"https://picgo.ddvlhr.red/picgo/202211260135130.jpeg","banner_img":"https://picgo.ddvlhr.red/picgo/202211260135130.jpeg","excerpt":"dotnet cli 中 使用 dotnet ef 工具实现数据库迁移.","_content":"#### 1.安装迁移工具\n``` shell\n$ dotnet tool install --global dotnet-ef\n```\n\n#### 2.引入迁移工具\n``` shell\n$ dotnet add package Microsoft.EntityFrameworkCore.Design\n```\n\n#### 3.初始化迁移工具\n##### migration-project-absolute-url 如果不想把 migrations 文件夹存放在运行项目中时,   \n##### 请指定存放 migraitons 文件夹项目的绝对路径  \n``` shell\n$ dotnet ef migrations add migration-name --project migration-project-absolute-url \n```\n\n#### 4.更新数据库\n``` shell\n$ dotnet ef database update \n```","source":"_posts/2022-11-25-migrations.md","raw":"---\ntitle: .NET EFCore 迁移工具\nindex_img: https://picgo.ddvlhr.red/picgo/202211260135130.jpeg\nbanner_img: https://picgo.ddvlhr.red/picgo/202211260135130.jpeg\nexcerpt: dotnet cli 中 使用 dotnet ef 工具实现数据库迁移.\ntags: [.NET, EntityFrameworkCore, Backend]\n---\n#### 1.安装迁移工具\n``` shell\n$ dotnet tool install --global dotnet-ef\n```\n\n#### 2.引入迁移工具\n``` shell\n$ dotnet add package Microsoft.EntityFrameworkCore.Design\n```\n\n#### 3.初始化迁移工具\n##### migration-project-absolute-url 如果不想把 migrations 文件夹存放在运行项目中时,   \n##### 请指定存放 migraitons 文件夹项目的绝对路径  \n``` shell\n$ dotnet ef migrations add migration-name --project migration-project-absolute-url \n```\n\n#### 4.更新数据库\n``` shell\n$ dotnet ef database update \n```","slug":"2022-11-25-migrations","published":1,"date":"2022-12-15T12:35:45.091Z","updated":"2022-12-16T11:58:56.312Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clbqpc1dm00039wq96wa6gwr1","content":"<h4 id=\"1-安装迁移工具\"><a href=\"#1-安装迁移工具\" class=\"headerlink\" title=\"1.安装迁移工具\"></a>1.安装迁移工具</h4><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs shell\"><span class=\"hljs-meta prompt_\">$ </span><span class=\"language-bash\">dotnet tool install --global dotnet-ef</span><br></code></pre></td></tr></table></figure>\n\n<h4 id=\"2-引入迁移工具\"><a href=\"#2-引入迁移工具\" class=\"headerlink\" title=\"2.引入迁移工具\"></a>2.引入迁移工具</h4><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs shell\"><span class=\"hljs-meta prompt_\">$ </span><span class=\"language-bash\">dotnet add package Microsoft.EntityFrameworkCore.Design</span><br></code></pre></td></tr></table></figure>\n\n<h4 id=\"3-初始化迁移工具\"><a href=\"#3-初始化迁移工具\" class=\"headerlink\" title=\"3.初始化迁移工具\"></a>3.初始化迁移工具</h4><h5 id=\"migration-project-absolute-url-如果不想把-migrations-文件夹存放在运行项目中时\"><a href=\"#migration-project-absolute-url-如果不想把-migrations-文件夹存放在运行项目中时\" class=\"headerlink\" title=\"migration-project-absolute-url 如果不想把 migrations 文件夹存放在运行项目中时,\"></a>migration-project-absolute-url 如果不想把 migrations 文件夹存放在运行项目中时,</h5><h5 id=\"请指定存放-migraitons-文件夹项目的绝对路径\"><a href=\"#请指定存放-migraitons-文件夹项目的绝对路径\" class=\"headerlink\" title=\"请指定存放 migraitons 文件夹项目的绝对路径\"></a>请指定存放 migraitons 文件夹项目的绝对路径</h5><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs shell\"><span class=\"hljs-meta prompt_\">$ </span><span class=\"language-bash\">dotnet ef migrations add migration-name --project migration-project-absolute-url</span> <br></code></pre></td></tr></table></figure>\n\n<h4 id=\"4-更新数据库\"><a href=\"#4-更新数据库\" class=\"headerlink\" title=\"4.更新数据库\"></a>4.更新数据库</h4><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs shell\"><span class=\"hljs-meta prompt_\">$ </span><span class=\"language-bash\">dotnet ef database update</span> <br></code></pre></td></tr></table></figure>","site":{"data":{}},"more":"<h4 id=\"1-安装迁移工具\"><a href=\"#1-安装迁移工具\" class=\"headerlink\" title=\"1.安装迁移工具\"></a>1.安装迁移工具</h4><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs shell\"><span class=\"hljs-meta prompt_\">$ </span><span class=\"language-bash\">dotnet tool install --global dotnet-ef</span><br></code></pre></td></tr></table></figure>\n\n<h4 id=\"2-引入迁移工具\"><a href=\"#2-引入迁移工具\" class=\"headerlink\" title=\"2.引入迁移工具\"></a>2.引入迁移工具</h4><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs shell\"><span class=\"hljs-meta prompt_\">$ </span><span class=\"language-bash\">dotnet add package Microsoft.EntityFrameworkCore.Design</span><br></code></pre></td></tr></table></figure>\n\n<h4 id=\"3-初始化迁移工具\"><a href=\"#3-初始化迁移工具\" class=\"headerlink\" title=\"3.初始化迁移工具\"></a>3.初始化迁移工具</h4><h5 id=\"migration-project-absolute-url-如果不想把-migrations-文件夹存放在运行项目中时\"><a href=\"#migration-project-absolute-url-如果不想把-migrations-文件夹存放在运行项目中时\" class=\"headerlink\" title=\"migration-project-absolute-url 如果不想把 migrations 文件夹存放在运行项目中时,\"></a>migration-project-absolute-url 如果不想把 migrations 文件夹存放在运行项目中时,</h5><h5 id=\"请指定存放-migraitons-文件夹项目的绝对路径\"><a href=\"#请指定存放-migraitons-文件夹项目的绝对路径\" class=\"headerlink\" title=\"请指定存放 migraitons 文件夹项目的绝对路径\"></a>请指定存放 migraitons 文件夹项目的绝对路径</h5><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs shell\"><span class=\"hljs-meta prompt_\">$ </span><span class=\"language-bash\">dotnet ef migrations add migration-name --project migration-project-absolute-url</span> <br></code></pre></td></tr></table></figure>\n\n<h4 id=\"4-更新数据库\"><a href=\"#4-更新数据库\" class=\"headerlink\" title=\"4.更新数据库\"></a>4.更新数据库</h4><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs shell\"><span class=\"hljs-meta prompt_\">$ </span><span class=\"language-bash\">dotnet ef database update</span> <br></code></pre></td></tr></table></figure>"},{"title":".NET 自定义自动依赖注入特性工具","index_img":"https://picgo.ddvlhr.red/picgo/202211260135118.jpeg","banner_img":"https://picgo.ddvlhr.red/picgo/202211260135118.jpeg","date":"2022-11-25T16:00:00.000Z","_content":"> 该 Attribute 为自定义自动依赖注入工具, 只需要在 class 中使用该 Attribute 即可以自动注入, 不必在 Program.cs 或者 Startup.cs 中手动注入. \n\n<!-- more -->\n\n## 1.创建 InjectType 枚举类\n\n该枚举类定义三种生命周期, 分别为 Singleton, Scoped, Transient.\n\n``` csharp\n/// <summary>\n/// 注入类型\n/// </summary>\npublic enum InjectType\n{\n    Scope,\n    Single,\n    Transient\n}\n```\n## 2.创建 AutoInjectAttribute.cs 文件\n``` csharp\n[AttributeUsage(AttributeTargets.Class, AllowMultiple = false)]\npublic class AutoInjectAttribute: Attribute\n{\n    public AutoInjectAttribute(Type interfaceType, InjectType injectType)\n    {\n        Type = interfaceType;\n        InjectType = injectType;\n    }\n\n    public Type Type { get; set; }\n    public InjectType InjectType { get; set; }\n}\n```\n## 3.创建 AutoInjectExtension.cs 文件\n\n该文件为自动注入扩展方法类.\n\n``` csharp\npublic static class AutoInjectExtension {\n    /// <summary>\n    /// 自动注入所有的程序集有InjectAttribute标签\n    /// </summary>\n    /// <param name=\"serviceCollection\"></param>\n    /// <returns></returns>\n    public static IServiceCollection AddAutoDi(this IServiceCollection serviceCollection)\n    {\n        var path = AppDomain.CurrentDomain.BaseDirectory;\n        var assemblies = Directory.GetFiles(path, \"*.dll\").Select(Assembly.LoadFrom).ToList();\n        foreach (var assembly in assemblies)\n        {\n            var types = assembly.GetTypes().Where(a => a.GetCustomAttribute<AutoInjectAttribute>() != null)\n                .ToList();\n            if (types.Count <= 0) continue;\n            foreach (var type in types)\n            {\n                var attr = type.GetCustomAttribute<AutoInjectAttribute>();\n                if (attr?.Type == null) continue;\n                switch (attr.InjectType)\n                {\n                    case InjectType.Scope:\n                        serviceCollection.AddScoped(attr.Type, type);\n                        break;\n                    case InjectType.Single:\n                        serviceCollection.AddSingleton(attr.Type, type);\n                        break;\n                    case InjectType.Transient:\n                        serviceCollection.AddTransient(attr.Type, type);\n                        break;\n                    default:\n                        throw new ArgumentOutOfRangeException();\n                }\n            }\n        }\n        return serviceCollection;\n    }\n}\n```\n## 4.注册扩展方法\n\n在 Program.cs 或者 Startup.cs 中注册该扩展方法.\n\n``` csharp\nservices.AddAutoDi();\n```\n## 5.使用\n\n在需要注入的类中使用该 Attribute.\n\n``` csharp\n[AutoInject(typeof(IUserService), InjectType.Scope)]\npublic class UserService: IUserService {}\n```","source":"_posts/2022-11-26-dotnet-auto-inject.md","raw":"---\ntitle: \".NET 自定义自动依赖注入特性工具\"\nindex_img: https://picgo.ddvlhr.red/picgo/202211260135118.jpeg\nbanner_img: https://picgo.ddvlhr.red/picgo/202211260135118.jpeg\ndate: 2022/11/26\ntags: [.NET, DI, C#]\n---\n> 该 Attribute 为自定义自动依赖注入工具, 只需要在 class 中使用该 Attribute 即可以自动注入, 不必在 Program.cs 或者 Startup.cs 中手动注入. \n\n<!-- more -->\n\n## 1.创建 InjectType 枚举类\n\n该枚举类定义三种生命周期, 分别为 Singleton, Scoped, Transient.\n\n``` csharp\n/// <summary>\n/// 注入类型\n/// </summary>\npublic enum InjectType\n{\n    Scope,\n    Single,\n    Transient\n}\n```\n## 2.创建 AutoInjectAttribute.cs 文件\n``` csharp\n[AttributeUsage(AttributeTargets.Class, AllowMultiple = false)]\npublic class AutoInjectAttribute: Attribute\n{\n    public AutoInjectAttribute(Type interfaceType, InjectType injectType)\n    {\n        Type = interfaceType;\n        InjectType = injectType;\n    }\n\n    public Type Type { get; set; }\n    public InjectType InjectType { get; set; }\n}\n```\n## 3.创建 AutoInjectExtension.cs 文件\n\n该文件为自动注入扩展方法类.\n\n``` csharp\npublic static class AutoInjectExtension {\n    /// <summary>\n    /// 自动注入所有的程序集有InjectAttribute标签\n    /// </summary>\n    /// <param name=\"serviceCollection\"></param>\n    /// <returns></returns>\n    public static IServiceCollection AddAutoDi(this IServiceCollection serviceCollection)\n    {\n        var path = AppDomain.CurrentDomain.BaseDirectory;\n        var assemblies = Directory.GetFiles(path, \"*.dll\").Select(Assembly.LoadFrom).ToList();\n        foreach (var assembly in assemblies)\n        {\n            var types = assembly.GetTypes().Where(a => a.GetCustomAttribute<AutoInjectAttribute>() != null)\n                .ToList();\n            if (types.Count <= 0) continue;\n            foreach (var type in types)\n            {\n                var attr = type.GetCustomAttribute<AutoInjectAttribute>();\n                if (attr?.Type == null) continue;\n                switch (attr.InjectType)\n                {\n                    case InjectType.Scope:\n                        serviceCollection.AddScoped(attr.Type, type);\n                        break;\n                    case InjectType.Single:\n                        serviceCollection.AddSingleton(attr.Type, type);\n                        break;\n                    case InjectType.Transient:\n                        serviceCollection.AddTransient(attr.Type, type);\n                        break;\n                    default:\n                        throw new ArgumentOutOfRangeException();\n                }\n            }\n        }\n        return serviceCollection;\n    }\n}\n```\n## 4.注册扩展方法\n\n在 Program.cs 或者 Startup.cs 中注册该扩展方法.\n\n``` csharp\nservices.AddAutoDi();\n```\n## 5.使用\n\n在需要注入的类中使用该 Attribute.\n\n``` csharp\n[AutoInject(typeof(IUserService), InjectType.Scope)]\npublic class UserService: IUserService {}\n```","slug":"2022-11-26-dotnet-auto-inject","published":1,"updated":"2022-12-16T11:58:56.313Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clbqpc1du00069wq93hp13ykp","content":"<blockquote>\n<p>该 Attribute 为自定义自动依赖注入工具, 只需要在 class 中使用该 Attribute 即可以自动注入, 不必在 Program.cs 或者 Startup.cs 中手动注入. </p>\n</blockquote>\n<span id=\"more\"></span>\n\n<h2 id=\"1-创建-InjectType-枚举类\"><a href=\"#1-创建-InjectType-枚举类\" class=\"headerlink\" title=\"1.创建 InjectType 枚举类\"></a>1.创建 InjectType 枚举类</h2><p>该枚举类定义三种生命周期, 分别为 Singleton, Scoped, Transient.</p>\n<figure class=\"highlight csharp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs csharp\"><span class=\"hljs-comment\"><span class=\"hljs-doctag\">///</span> <span class=\"hljs-doctag\">&lt;summary&gt;</span></span><br><span class=\"hljs-comment\"><span class=\"hljs-doctag\">///</span> 注入类型</span><br><span class=\"hljs-comment\"><span class=\"hljs-doctag\">///</span> <span class=\"hljs-doctag\">&lt;/summary&gt;</span></span><br><span class=\"hljs-keyword\">public</span> <span class=\"hljs-built_in\">enum</span> InjectType<br>&#123;<br>    Scope,<br>    Single,<br>    Transient<br>&#125;<br></code></pre></td></tr></table></figure>\n<h2 id=\"2-创建-AutoInjectAttribute-cs-文件\"><a href=\"#2-创建-AutoInjectAttribute-cs-文件\" class=\"headerlink\" title=\"2.创建 AutoInjectAttribute.cs 文件\"></a>2.创建 AutoInjectAttribute.cs 文件</h2><figure class=\"highlight csharp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs csharp\">[<span class=\"hljs-meta\">AttributeUsage(AttributeTargets.Class, AllowMultiple = false)</span>]<br><span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">AutoInjectAttribute</span>: <span class=\"hljs-title\">Attribute</span><br>&#123;<br>    <span class=\"hljs-function\"><span class=\"hljs-keyword\">public</span> <span class=\"hljs-title\">AutoInjectAttribute</span>(<span class=\"hljs-params\">Type interfaceType, InjectType injectType</span>)</span><br>    &#123;<br>        Type = interfaceType;<br>        InjectType = injectType;<br>    &#125;<br><br>    <span class=\"hljs-keyword\">public</span> Type Type &#123; <span class=\"hljs-keyword\">get</span>; <span class=\"hljs-keyword\">set</span>; &#125;<br>    <span class=\"hljs-keyword\">public</span> InjectType InjectType &#123; <span class=\"hljs-keyword\">get</span>; <span class=\"hljs-keyword\">set</span>; &#125;<br>&#125;<br></code></pre></td></tr></table></figure>\n<h2 id=\"3-创建-AutoInjectExtension-cs-文件\"><a href=\"#3-创建-AutoInjectExtension-cs-文件\" class=\"headerlink\" title=\"3.创建 AutoInjectExtension.cs 文件\"></a>3.创建 AutoInjectExtension.cs 文件</h2><p>该文件为自动注入扩展方法类.</p>\n<figure class=\"highlight csharp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs csharp\"><span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">static</span> <span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">AutoInjectExtension</span> &#123;<br>    <span class=\"hljs-comment\"><span class=\"hljs-doctag\">///</span> <span class=\"hljs-doctag\">&lt;summary&gt;</span></span><br>    <span class=\"hljs-comment\"><span class=\"hljs-doctag\">///</span> 自动注入所有的程序集有InjectAttribute标签</span><br>    <span class=\"hljs-comment\"><span class=\"hljs-doctag\">///</span> <span class=\"hljs-doctag\">&lt;/summary&gt;</span></span><br>    <span class=\"hljs-comment\"><span class=\"hljs-doctag\">///</span> <span class=\"hljs-doctag\">&lt;param name=&quot;serviceCollection&quot;&gt;</span><span class=\"hljs-doctag\">&lt;/param&gt;</span></span><br>    <span class=\"hljs-comment\"><span class=\"hljs-doctag\">///</span> <span class=\"hljs-doctag\">&lt;returns&gt;</span><span class=\"hljs-doctag\">&lt;/returns&gt;</span></span><br>    <span class=\"hljs-function\"><span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">static</span> IServiceCollection <span class=\"hljs-title\">AddAutoDi</span>(<span class=\"hljs-params\"><span class=\"hljs-keyword\">this</span> IServiceCollection serviceCollection</span>)</span><br>    &#123;<br>        <span class=\"hljs-keyword\">var</span> path = AppDomain.CurrentDomain.BaseDirectory;<br>        <span class=\"hljs-keyword\">var</span> assemblies = Directory.GetFiles(path, <span class=\"hljs-string\">&quot;*.dll&quot;</span>).Select(Assembly.LoadFrom).ToList();<br>        <span class=\"hljs-keyword\">foreach</span> (<span class=\"hljs-keyword\">var</span> assembly <span class=\"hljs-keyword\">in</span> assemblies)<br>        &#123;<br>            <span class=\"hljs-keyword\">var</span> types = assembly.GetTypes().Where(a =&gt; a.GetCustomAttribute&lt;AutoInjectAttribute&gt;() != <span class=\"hljs-literal\">null</span>)<br>                .ToList();<br>            <span class=\"hljs-keyword\">if</span> (types.Count &lt;= <span class=\"hljs-number\">0</span>) <span class=\"hljs-keyword\">continue</span>;<br>            <span class=\"hljs-keyword\">foreach</span> (<span class=\"hljs-keyword\">var</span> type <span class=\"hljs-keyword\">in</span> types)<br>            &#123;<br>                <span class=\"hljs-keyword\">var</span> attr = type.GetCustomAttribute&lt;AutoInjectAttribute&gt;();<br>                <span class=\"hljs-keyword\">if</span> (attr?.Type == <span class=\"hljs-literal\">null</span>) <span class=\"hljs-keyword\">continue</span>;<br>                <span class=\"hljs-keyword\">switch</span> (attr.InjectType)<br>                &#123;<br>                    <span class=\"hljs-keyword\">case</span> InjectType.Scope:<br>                        serviceCollection.AddScoped(attr.Type, type);<br>                        <span class=\"hljs-keyword\">break</span>;<br>                    <span class=\"hljs-keyword\">case</span> InjectType.Single:<br>                        serviceCollection.AddSingleton(attr.Type, type);<br>                        <span class=\"hljs-keyword\">break</span>;<br>                    <span class=\"hljs-keyword\">case</span> InjectType.Transient:<br>                        serviceCollection.AddTransient(attr.Type, type);<br>                        <span class=\"hljs-keyword\">break</span>;<br>                    <span class=\"hljs-literal\">default</span>:<br>                        <span class=\"hljs-keyword\">throw</span> <span class=\"hljs-keyword\">new</span> ArgumentOutOfRangeException();<br>                &#125;<br>            &#125;<br>        &#125;<br>        <span class=\"hljs-keyword\">return</span> serviceCollection;<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure>\n<h2 id=\"4-注册扩展方法\"><a href=\"#4-注册扩展方法\" class=\"headerlink\" title=\"4.注册扩展方法\"></a>4.注册扩展方法</h2><p>在 Program.cs 或者 Startup.cs 中注册该扩展方法.</p>\n<figure class=\"highlight csharp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs csharp\">services.AddAutoDi();<br></code></pre></td></tr></table></figure>\n<h2 id=\"5-使用\"><a href=\"#5-使用\" class=\"headerlink\" title=\"5.使用\"></a>5.使用</h2><p>在需要注入的类中使用该 Attribute.</p>\n<figure class=\"highlight csharp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs csharp\">[<span class=\"hljs-meta\">AutoInject(typeof(IUserService), InjectType.Scope)</span>]<br><span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">UserService</span>: <span class=\"hljs-title\">IUserService</span> &#123;&#125;<br></code></pre></td></tr></table></figure>","site":{"data":{}},"excerpt":"<blockquote>\n<p>该 Attribute 为自定义自动依赖注入工具, 只需要在 class 中使用该 Attribute 即可以自动注入, 不必在 Program.cs 或者 Startup.cs 中手动注入. </p>\n</blockquote>","more":"<h2 id=\"1-创建-InjectType-枚举类\"><a href=\"#1-创建-InjectType-枚举类\" class=\"headerlink\" title=\"1.创建 InjectType 枚举类\"></a>1.创建 InjectType 枚举类</h2><p>该枚举类定义三种生命周期, 分别为 Singleton, Scoped, Transient.</p>\n<figure class=\"highlight csharp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs csharp\"><span class=\"hljs-comment\"><span class=\"hljs-doctag\">///</span> <span class=\"hljs-doctag\">&lt;summary&gt;</span></span><br><span class=\"hljs-comment\"><span class=\"hljs-doctag\">///</span> 注入类型</span><br><span class=\"hljs-comment\"><span class=\"hljs-doctag\">///</span> <span class=\"hljs-doctag\">&lt;/summary&gt;</span></span><br><span class=\"hljs-keyword\">public</span> <span class=\"hljs-built_in\">enum</span> InjectType<br>&#123;<br>    Scope,<br>    Single,<br>    Transient<br>&#125;<br></code></pre></td></tr></table></figure>\n<h2 id=\"2-创建-AutoInjectAttribute-cs-文件\"><a href=\"#2-创建-AutoInjectAttribute-cs-文件\" class=\"headerlink\" title=\"2.创建 AutoInjectAttribute.cs 文件\"></a>2.创建 AutoInjectAttribute.cs 文件</h2><figure class=\"highlight csharp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs csharp\">[<span class=\"hljs-meta\">AttributeUsage(AttributeTargets.Class, AllowMultiple = false)</span>]<br><span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">AutoInjectAttribute</span>: <span class=\"hljs-title\">Attribute</span><br>&#123;<br>    <span class=\"hljs-function\"><span class=\"hljs-keyword\">public</span> <span class=\"hljs-title\">AutoInjectAttribute</span>(<span class=\"hljs-params\">Type interfaceType, InjectType injectType</span>)</span><br>    &#123;<br>        Type = interfaceType;<br>        InjectType = injectType;<br>    &#125;<br><br>    <span class=\"hljs-keyword\">public</span> Type Type &#123; <span class=\"hljs-keyword\">get</span>; <span class=\"hljs-keyword\">set</span>; &#125;<br>    <span class=\"hljs-keyword\">public</span> InjectType InjectType &#123; <span class=\"hljs-keyword\">get</span>; <span class=\"hljs-keyword\">set</span>; &#125;<br>&#125;<br></code></pre></td></tr></table></figure>\n<h2 id=\"3-创建-AutoInjectExtension-cs-文件\"><a href=\"#3-创建-AutoInjectExtension-cs-文件\" class=\"headerlink\" title=\"3.创建 AutoInjectExtension.cs 文件\"></a>3.创建 AutoInjectExtension.cs 文件</h2><p>该文件为自动注入扩展方法类.</p>\n<figure class=\"highlight csharp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs csharp\"><span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">static</span> <span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">AutoInjectExtension</span> &#123;<br>    <span class=\"hljs-comment\"><span class=\"hljs-doctag\">///</span> <span class=\"hljs-doctag\">&lt;summary&gt;</span></span><br>    <span class=\"hljs-comment\"><span class=\"hljs-doctag\">///</span> 自动注入所有的程序集有InjectAttribute标签</span><br>    <span class=\"hljs-comment\"><span class=\"hljs-doctag\">///</span> <span class=\"hljs-doctag\">&lt;/summary&gt;</span></span><br>    <span class=\"hljs-comment\"><span class=\"hljs-doctag\">///</span> <span class=\"hljs-doctag\">&lt;param name=&quot;serviceCollection&quot;&gt;</span><span class=\"hljs-doctag\">&lt;/param&gt;</span></span><br>    <span class=\"hljs-comment\"><span class=\"hljs-doctag\">///</span> <span class=\"hljs-doctag\">&lt;returns&gt;</span><span class=\"hljs-doctag\">&lt;/returns&gt;</span></span><br>    <span class=\"hljs-function\"><span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">static</span> IServiceCollection <span class=\"hljs-title\">AddAutoDi</span>(<span class=\"hljs-params\"><span class=\"hljs-keyword\">this</span> IServiceCollection serviceCollection</span>)</span><br>    &#123;<br>        <span class=\"hljs-keyword\">var</span> path = AppDomain.CurrentDomain.BaseDirectory;<br>        <span class=\"hljs-keyword\">var</span> assemblies = Directory.GetFiles(path, <span class=\"hljs-string\">&quot;*.dll&quot;</span>).Select(Assembly.LoadFrom).ToList();<br>        <span class=\"hljs-keyword\">foreach</span> (<span class=\"hljs-keyword\">var</span> assembly <span class=\"hljs-keyword\">in</span> assemblies)<br>        &#123;<br>            <span class=\"hljs-keyword\">var</span> types = assembly.GetTypes().Where(a =&gt; a.GetCustomAttribute&lt;AutoInjectAttribute&gt;() != <span class=\"hljs-literal\">null</span>)<br>                .ToList();<br>            <span class=\"hljs-keyword\">if</span> (types.Count &lt;= <span class=\"hljs-number\">0</span>) <span class=\"hljs-keyword\">continue</span>;<br>            <span class=\"hljs-keyword\">foreach</span> (<span class=\"hljs-keyword\">var</span> type <span class=\"hljs-keyword\">in</span> types)<br>            &#123;<br>                <span class=\"hljs-keyword\">var</span> attr = type.GetCustomAttribute&lt;AutoInjectAttribute&gt;();<br>                <span class=\"hljs-keyword\">if</span> (attr?.Type == <span class=\"hljs-literal\">null</span>) <span class=\"hljs-keyword\">continue</span>;<br>                <span class=\"hljs-keyword\">switch</span> (attr.InjectType)<br>                &#123;<br>                    <span class=\"hljs-keyword\">case</span> InjectType.Scope:<br>                        serviceCollection.AddScoped(attr.Type, type);<br>                        <span class=\"hljs-keyword\">break</span>;<br>                    <span class=\"hljs-keyword\">case</span> InjectType.Single:<br>                        serviceCollection.AddSingleton(attr.Type, type);<br>                        <span class=\"hljs-keyword\">break</span>;<br>                    <span class=\"hljs-keyword\">case</span> InjectType.Transient:<br>                        serviceCollection.AddTransient(attr.Type, type);<br>                        <span class=\"hljs-keyword\">break</span>;<br>                    <span class=\"hljs-literal\">default</span>:<br>                        <span class=\"hljs-keyword\">throw</span> <span class=\"hljs-keyword\">new</span> ArgumentOutOfRangeException();<br>                &#125;<br>            &#125;<br>        &#125;<br>        <span class=\"hljs-keyword\">return</span> serviceCollection;<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure>\n<h2 id=\"4-注册扩展方法\"><a href=\"#4-注册扩展方法\" class=\"headerlink\" title=\"4.注册扩展方法\"></a>4.注册扩展方法</h2><p>在 Program.cs 或者 Startup.cs 中注册该扩展方法.</p>\n<figure class=\"highlight csharp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs csharp\">services.AddAutoDi();<br></code></pre></td></tr></table></figure>\n<h2 id=\"5-使用\"><a href=\"#5-使用\" class=\"headerlink\" title=\"5.使用\"></a>5.使用</h2><p>在需要注入的类中使用该 Attribute.</p>\n<figure class=\"highlight csharp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs csharp\">[<span class=\"hljs-meta\">AutoInject(typeof(IUserService), InjectType.Scope)</span>]<br><span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">UserService</span>: <span class=\"hljs-title\">IUserService</span> &#123;&#125;<br></code></pre></td></tr></table></figure>"},{"title":"SSH 上传, 下载文件","index_img":"https://picgo.ddvlhr.red/picgo/202212160943902.jpg","banner_img":"https://picgo.ddvlhr.red/picgo/202212160943902.jpg","excerpt":"使用 SSH 上传, 下载文件和文件夹.","_content":"\n{% note success %}\n在 linux 上一般使用 scp 这个命令来通过 ssh 传输文件\n{% endnote %}\n\n{% note warning %}\n注: 目标服务器要开启写入权限\n{% endnote %}\n\n## 1. 从服务器下载文件\n\n```shell\nscp username@server:/path/filename /path(本地目录)\n```\n\n## 2. 上传本地文件到服务器\n\n```shell\nscp /path/filename username@server:/path\n```\n\n## 3. 从服务器下载整个目录\n\n```shell\nscp -r username@server:/remote_dir(远程目录) /local_dir(本地目录)\n```\n\n## 4. 上传目录到服务器\n\n```shell\nscp -r /local_dir(本地目录) username@server:/remote_dir(远程目录)\n```\n\n","source":"_posts/2022-12-16-ssh-upload.md","raw":"---\ntitle: SSH 上传, 下载文件\nindex_img: https://picgo.ddvlhr.red/picgo/202212160943902.jpg\nbanner_img: https://picgo.ddvlhr.red/picgo/202212160943902.jpg\nexcerpt: 使用 SSH 上传, 下载文件和文件夹.\ntags: [SSH]\ncategories: [服务器]\n---\n\n{% note success %}\n在 linux 上一般使用 scp 这个命令来通过 ssh 传输文件\n{% endnote %}\n\n{% note warning %}\n注: 目标服务器要开启写入权限\n{% endnote %}\n\n## 1. 从服务器下载文件\n\n```shell\nscp username@server:/path/filename /path(本地目录)\n```\n\n## 2. 上传本地文件到服务器\n\n```shell\nscp /path/filename username@server:/path\n```\n\n## 3. 从服务器下载整个目录\n\n```shell\nscp -r username@server:/remote_dir(远程目录) /local_dir(本地目录)\n```\n\n## 4. 上传目录到服务器\n\n```shell\nscp -r /local_dir(本地目录) username@server:/remote_dir(远程目录)\n```\n\n","slug":"2022-12-16-ssh-upload","published":1,"date":"2022-12-16T11:58:56.313Z","updated":"2022-12-16T11:58:56.313Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clbqpc1eb000p9wq97xc12du9","content":"<div class=\"note note-success\">\n            <p>在 linux 上一般使用 scp 这个命令来通过 ssh 传输文件</p>\n          </div>\n\n<div class=\"note note-warning\">\n            <p>注: 目标服务器要开启写入权限</p>\n          </div>\n\n<h2 id=\"1-从服务器下载文件\"><a href=\"#1-从服务器下载文件\" class=\"headerlink\" title=\"1. 从服务器下载文件\"></a>1. 从服务器下载文件</h2><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs shell\">scp username@server:/path/filename /path(本地目录)<br></code></pre></td></tr></table></figure>\n\n<h2 id=\"2-上传本地文件到服务器\"><a href=\"#2-上传本地文件到服务器\" class=\"headerlink\" title=\"2. 上传本地文件到服务器\"></a>2. 上传本地文件到服务器</h2><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs shell\">scp /path/filename username@server:/path<br></code></pre></td></tr></table></figure>\n\n<h2 id=\"3-从服务器下载整个目录\"><a href=\"#3-从服务器下载整个目录\" class=\"headerlink\" title=\"3. 从服务器下载整个目录\"></a>3. 从服务器下载整个目录</h2><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs shell\">scp -r username@server:/remote_dir(远程目录) /local_dir(本地目录)<br></code></pre></td></tr></table></figure>\n\n<h2 id=\"4-上传目录到服务器\"><a href=\"#4-上传目录到服务器\" class=\"headerlink\" title=\"4. 上传目录到服务器\"></a>4. 上传目录到服务器</h2><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs shell\">scp -r /local_dir(本地目录) username@server:/remote_dir(远程目录)<br></code></pre></td></tr></table></figure>\n\n","site":{"data":{}},"more":"<div class=\"note note-success\">\n            <p>在 linux 上一般使用 scp 这个命令来通过 ssh 传输文件</p>\n          </div>\n\n<div class=\"note note-warning\">\n            <p>注: 目标服务器要开启写入权限</p>\n          </div>\n\n<h2 id=\"1-从服务器下载文件\"><a href=\"#1-从服务器下载文件\" class=\"headerlink\" title=\"1. 从服务器下载文件\"></a>1. 从服务器下载文件</h2><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs shell\">scp username@server:/path/filename /path(本地目录)<br></code></pre></td></tr></table></figure>\n\n<h2 id=\"2-上传本地文件到服务器\"><a href=\"#2-上传本地文件到服务器\" class=\"headerlink\" title=\"2. 上传本地文件到服务器\"></a>2. 上传本地文件到服务器</h2><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs shell\">scp /path/filename username@server:/path<br></code></pre></td></tr></table></figure>\n\n<h2 id=\"3-从服务器下载整个目录\"><a href=\"#3-从服务器下载整个目录\" class=\"headerlink\" title=\"3. 从服务器下载整个目录\"></a>3. 从服务器下载整个目录</h2><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs shell\">scp -r username@server:/remote_dir(远程目录) /local_dir(本地目录)<br></code></pre></td></tr></table></figure>\n\n<h2 id=\"4-上传目录到服务器\"><a href=\"#4-上传目录到服务器\" class=\"headerlink\" title=\"4. 上传目录到服务器\"></a>4. 上传目录到服务器</h2><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs shell\">scp -r /local_dir(本地目录) username@server:/remote_dir(远程目录)<br></code></pre></td></tr></table></figure>\n\n"}],"PostAsset":[],"PostCategory":[{"post_id":"clbqpc1eb000p9wq97xc12du9","category_id":"clbqpc1ec000q9wq9h3vkeb6p","_id":"clbqpc1ed000t9wq92jzo1eo2"}],"PostTag":[{"post_id":"clbqpc1dc00019wq9ayx44q92","tag_id":"clbqpc1dp00049wq9ffsw16b5","_id":"clbqpc1e0000c9wq94mpuf92q"},{"post_id":"clbqpc1dc00019wq9ayx44q92","tag_id":"clbqpc1dx00099wq9f5qdg4rr","_id":"clbqpc1e1000d9wq99ysdg0x6"},{"post_id":"clbqpc1dm00039wq96wa6gwr1","tag_id":"clbqpc1dp00049wq9ffsw16b5","_id":"clbqpc1e4000h9wq90u0o3lsw"},{"post_id":"clbqpc1dm00039wq96wa6gwr1","tag_id":"clbqpc1e1000e9wq94tlodyg6","_id":"clbqpc1e4000i9wq9drrc8huw"},{"post_id":"clbqpc1dm00039wq96wa6gwr1","tag_id":"clbqpc1e2000f9wq9cmki5doy","_id":"clbqpc1e6000k9wq9geqq0141"},{"post_id":"clbqpc1du00069wq93hp13ykp","tag_id":"clbqpc1dp00049wq9ffsw16b5","_id":"clbqpc1e8000m9wq9d2p906o7"},{"post_id":"clbqpc1du00069wq93hp13ykp","tag_id":"clbqpc1e4000j9wq95lmr54lw","_id":"clbqpc1e8000n9wq9dmzth9iy"},{"post_id":"clbqpc1du00069wq93hp13ykp","tag_id":"clbqpc1e6000l9wq9g1cvf7ys","_id":"clbqpc1e9000o9wq9bdzr47t8"},{"post_id":"clbqpc1eb000p9wq97xc12du9","tag_id":"clbqpc1ed000r9wq936tocal5","_id":"clbqpc1ed000s9wq9gpa21nov"}],"Tag":[{"name":".NET","_id":"clbqpc1dp00049wq9ffsw16b5"},{"name":"Docker","_id":"clbqpc1dx00099wq9f5qdg4rr"},{"name":"EntityFrameworkCore","_id":"clbqpc1e1000e9wq94tlodyg6"},{"name":"Backend","_id":"clbqpc1e2000f9wq9cmki5doy"},{"name":"DI","_id":"clbqpc1e4000j9wq95lmr54lw"},{"name":"C#","_id":"clbqpc1e6000l9wq9g1cvf7ys"},{"name":"SSH","_id":"clbqpc1ed000r9wq936tocal5"}]}}